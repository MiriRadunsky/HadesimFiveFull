// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DB_Manager))]
    partial class DB_ManagerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Goods__3214EC070A81DBE6");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("DAL.Models.GoodsToOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdGoods")
                        .HasColumnType("int");

                    b.Property<int>("IdOrders")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__GoodsToO__3214EC07AA6C1C77");

                    b.HasIndex("IdGoods");

                    b.HasIndex("IdOrders");

                    b.ToTable("GoodsToOrders");
                });

            modelBuilder.Entity("DAL.Models.GoodsToSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdGoods")
                        .HasColumnType("int");

                    b.Property<int>("IdSuppliers")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__GoodsToS__3214EC078F4F1972");

                    b.HasIndex("IdGoods");

                    b.HasIndex("IdSuppliers");

                    b.ToTable("GoodsToSuppliers");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSuppliers")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("waiting")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC071EDE88A5");

                    b.HasIndex("IdSuppliers");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DAL.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Supplier__3214EC07C6C8F3E5");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DAL.Models.GoodsToOrder", b =>
                {
                    b.HasOne("DAL.Models.Good", "IdGoodsNavigation")
                        .WithMany("GoodsToOrders")
                        .HasForeignKey("IdGoods")
                        .IsRequired()
                        .HasConstraintName("FK_GoodsToOrders_ToTable");

                    b.HasOne("DAL.Models.Order", "IdOrdersNavigation")
                        .WithMany("GoodsToOrders")
                        .HasForeignKey("IdOrders")
                        .IsRequired()
                        .HasConstraintName("FK_GoodsToOrders_ToTable1");

                    b.Navigation("IdGoodsNavigation");

                    b.Navigation("IdOrdersNavigation");
                });

            modelBuilder.Entity("DAL.Models.GoodsToSupplier", b =>
                {
                    b.HasOne("DAL.Models.Good", "IdGoodsNavigation")
                        .WithMany("GoodsToSuppliers")
                        .HasForeignKey("IdGoods")
                        .IsRequired()
                        .HasConstraintName("FK_GoodsToSuppliers_ToTable_1");

                    b.HasOne("DAL.Models.Supplier", "IdSuppliersNavigation")
                        .WithMany("GoodsToSuppliers")
                        .HasForeignKey("IdSuppliers")
                        .IsRequired()
                        .HasConstraintName("FK_GoodsToSuppliers_ToTable");

                    b.Navigation("IdGoodsNavigation");

                    b.Navigation("IdSuppliersNavigation");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.HasOne("DAL.Models.Supplier", "IdSuppliersNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdSuppliers")
                        .IsRequired()
                        .HasConstraintName("FK_Order_ToTable");

                    b.Navigation("IdSuppliersNavigation");
                });

            modelBuilder.Entity("DAL.Models.Good", b =>
                {
                    b.Navigation("GoodsToOrders");

                    b.Navigation("GoodsToSuppliers");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Navigation("GoodsToOrders");
                });

            modelBuilder.Entity("DAL.Models.Supplier", b =>
                {
                    b.Navigation("GoodsToSuppliers");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
